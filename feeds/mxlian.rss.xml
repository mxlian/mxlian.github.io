<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>planocomplejo</title><link>http://mxlian.github.io/</link><description></description><atom:link href="http://mxlian.github.io/feeds/mxlian.rss.xml" rel="self"></atom:link><lastBuildDate>Thu, 17 Oct 2013 00:00:00 +0200</lastBuildDate><item><title>Extracting RFID chip from SSS Siedle</title><link>http://mxlian.github.io/extracting-rfid-chip-from-sss-siedle.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;At work we use RFID cards to get through the doors. I don't like to carry it hanging from the neck. I wanted to put the rfid card in my phone, which is the only artifact (beside my wristwatch) that I carry with me all the time. &lt;/p&gt;
&lt;p&gt;One problem: the card is too thick to fit inside the phone. But it's mostly made of plastic, so my idea was to somehow extract the chip and antena from the card.&lt;/p&gt;
&lt;p&gt;Researching I found almost the same solution I wanted by &lt;a href="http://www.adafruit.com/blog/2012/07/16/how-to-embed-a-rfid-transit-card-in-your-iphone/"&gt;Adafruits&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The idea is to 'dissolve' the plastic and extract the internals. Sound much easier than it actually is and it depends a lot from the type of card you are using.&lt;/p&gt;
&lt;p&gt;After some failed attempts (3 actually), I decided to document the process to help someone with the same kind of card.&lt;/p&gt;
&lt;p&gt;So if you have a Siedle RFID card, which looks like the picture, keep reading:&lt;/p&gt;
&lt;p&gt;&lt;img alt="SSS Siedle RFID" src="http://mxlian.github.io/images/rfid/sss-siedle-card.jpg" style="width: 300px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;

&lt;h1&gt;1. Dissolve the plastic&lt;/h1&gt;
&lt;p&gt;The solvent used was &lt;strong&gt;acetone&lt;/strong&gt;. You can find it in cheap nail lacquer removers. It takes a lot of time. I got usable results after 10-12 hours. The best is to leave it covered, to prevent flooding your entire home with acetone and also reduce the evaporation.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Nail remover" src="http://mxlian.github.io/images/rfid/1.JPG" style="width: 1024px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;I covered it with a glass (don't use plastic!) bowl, and leave it the whole night working.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Nail remover" src="http://mxlian.github.io/images/rfid/2.JPG" style="width: 1024px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;The plastic is not rigid anymore. It look like gum. You can easily distinguish the antenna ring on the card.&lt;/p&gt;
&lt;h1&gt;2. Extract the chip&lt;/h1&gt;
&lt;p&gt;Using scissors cut the circle formed by the antenna. Don't worry there are nothing useful outside the ring, but be careful not to cut too much. It's better to leave some room for errors and then retouch it later in small increments.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Nail remover" src="http://mxlian.github.io/images/rfid/3.JPG" style="width: 1024px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;The card is like a sandwich, with the rfid circuit in the middle. Why you want to do is to get rid of the bread. Using small increments, cut arround the circle formed by the antenna until you find a spot where both sides of the card aren't stick to each other. From that sort of bubble you want to start to pull the both sides in opposite directions.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Nail remover" src="http://mxlian.github.io/images/rfid/4.JPG" style="width: 1024px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;It's better to start on the opposite side where the chip resides, to leave the dedicate part for the end, when you already have revealed most of the antenna's surface.&lt;/p&gt;
&lt;p&gt;I've marked with a circle where the chip approximately resides, and with an arrow the best place to start pulling the card aside.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Nail remover" src="http://mxlian.github.io/images/rfid/5.JPG" style="width: 1024px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;Start pulling slowly and very carefully ...&lt;/p&gt;
&lt;p&gt;&lt;img alt="Nail remover" src="http://mxlian.github.io/images/rfid/6.JPG" style="width: 1024px; height: auto; max-width: 100%;"/&gt;
&lt;img alt="Nail remover" src="http://mxlian.github.io/images/rfid/7.JPG" style="width: 1024px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;The chip is attached to the antenna with &lt;strong&gt;very very thin wires&lt;/strong&gt;. If you brake it, you're done. So be very careful. That's the tricky part.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Nail remover" src="http://mxlian.github.io/images/rfid/8.JPG" style="width: 1024px; height: auto; max-width: 100%;"/&gt;
&lt;img alt="Nail remover" src="http://mxlian.github.io/images/rfid/9.JPG" style="width: 1024px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;h1&gt;3. Protect it&lt;/h1&gt;
&lt;p&gt;Now that you managed to get rid of the plastic and the chip stills being connected to the antenna it's time to protect this fragile device. I used simple Tesa tape, to sandwich it. Works like a charm.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Nail remover" src="http://mxlian.github.io/images/rfid/10.JPG" style="width: 1024px; height: auto; max-width: 100%;"/&gt;
&lt;img alt="Nail remover" src="http://mxlian.github.io/images/rfid/11.JPG" style="width: 1024px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;Now enjoy the magic of oppening the doors only with your phone.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Nail remover" src="http://mxlian.github.io/images/rfid/12.JPG" style="width: 1024px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">mxlian</dc:creator><pubDate>Thu, 17 Oct 2013 00:00:00 +0200</pubDate><guid>tag:mxlian.github.io,2013-10-17:extracting-rfid-chip-from-sss-siedle.html</guid></item><item><title>Biometric identification using analysis of the angular changes of a door when a person opens it</title><link>http://mxlian.github.io/neuror.html</link><description>&lt;html&gt;&lt;body&gt;&lt;p&gt;Differences between human beings (physical and psychological) make us interact with our surrounding in a very unique way.&lt;/p&gt;
&lt;p&gt;With my friend Julian we thought it may be possible to identify a person entering into a building from the way it opens the building's door.&lt;/p&gt;
&lt;h1&gt;Input&lt;/h1&gt;
&lt;p&gt;The first step is to collect some samples, so we can have a nice test set to develop the recognition system.&lt;/p&gt;
&lt;p&gt;To feed the system, we wanted to sample the angular position of a door at a fixed rate for a fixed amount of time. This sample will then be used as the 'fingerprint' of the person to be identified.&lt;/p&gt;
&lt;p&gt;The experiments took place on a garage door, where only a reduced amount of people has access. &lt;/p&gt;
&lt;p&gt;The sensor is a potentiometer with its body fixed, and the moving shaft attached to the door. &lt;/p&gt;
&lt;p&gt;&lt;img alt="potetiometer" src="http://mxlian.github.io/images/neuror/1.resized.JPG" style="width: 1024px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;The potentiometer is aligned with the door axis, allowing the moving shaft to follow the angular movements of the door.&lt;/p&gt;
&lt;p&gt;&lt;img alt="potetiometer" src="http://mxlian.github.io/images/neuror/2.resized.JPG" style="width: 576px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;Whenever someone opens the door, the potentiometer will track the movement all the time.&lt;/p&gt;
&lt;p&gt;&lt;img alt="potetiometer" src="http://mxlian.github.io/images/neuror/3.resized.JPG" style="width: 576px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;The signals of the potentiometer are collected with an arduino (my self made Severino version :), digitalized an sent to a PC where it's stored in a database.&lt;/p&gt;
&lt;p&gt;&lt;img alt="arduino" src="http://mxlian.github.io/images/neuror/4.resized.JPG" style="width: 1024px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;The arduino runs a sketch wich performs the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It calibrates the value of the door closed&lt;/li&gt;
&lt;li&gt;Detects when the door starts to open&lt;/li&gt;
&lt;li&gt;When its opened&lt;ul&gt;
&lt;li&gt;Measure the potentiometer signal &lt;/li&gt;
&lt;li&gt;Send this signal to the computer immediately (there is no enough memory on the arduino to store large samples)&lt;/li&gt;
&lt;li&gt;Wait a fixed amount of time before the next reading&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;When the door closes send a special character to signalize the pc that the sampling finished (and it can be saved on the DB)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The code of the sketch looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;       Neuror - Door Interface Sketch &lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="c1"&gt;/// Parametros de funcionamiento ///&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="n"&gt;define&lt;/span&gt; &lt;span class="n"&gt;Tolerancia&lt;/span&gt; &lt;span class="mh"&gt;7&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="n"&gt;define&lt;/span&gt; &lt;span class="n"&gt;PinAnalogico&lt;/span&gt; &lt;span class="mh"&gt;0&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="n"&gt;define&lt;/span&gt; &lt;span class="n"&gt;PinLedIndicador&lt;/span&gt; &lt;span class="mh"&gt;13&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="n"&gt;define&lt;/span&gt; &lt;span class="n"&gt;TiempoEntreMuestras&lt;/span&gt; &lt;span class="mh"&gt;20&lt;/span&gt; &lt;span class="c1"&gt;// Valor en ms. + lo q toma enviar &lt;/span&gt;
                               &lt;span class="c1"&gt;// los 2/3/4/5 bytes por serial.&lt;/span&gt;

&lt;span class="k"&gt;int&lt;/span&gt; &lt;span class="n"&gt;valorAD&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;int&lt;/span&gt; &lt;span class="n"&gt;valorMinimo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;1023&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;        &lt;span class="c1"&gt;// Para forzar una recalibracion&lt;/span&gt;
&lt;span class="k"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mh"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;9600&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="n"&gt;pinMode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PinLedIndicador&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;OUTPUT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// Serial.println("READY!");&lt;/span&gt;
    &lt;span class="n"&gt;digitalWrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PinLedIndicador&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;HIGH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;// Mostar q ya empieza el programa&lt;/span&gt;
    &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                  
    &lt;span class="n"&gt;digitalWrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PinLedIndicador&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;


    &lt;span class="c1"&gt;/// RUTINA RECALIBRACION ///&lt;/span&gt;
    &lt;span class="n"&gt;valorAD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;analogRead&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PinAnalogico&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;valorAD&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;valorMinimo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Tolerancia&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mh"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// Hay q recalibrar el minimo&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mh"&gt;1023&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;valorAD&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Tolerancia&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;          &lt;span class="c1"&gt;// Si el minimo esta demasiado &lt;/span&gt;
                                                    &lt;span class="c1"&gt;// cerca del limite superior del &lt;/span&gt;
                                                    &lt;span class="c1"&gt;// CAD no hay q establecerlo &lt;/span&gt;
                                                    &lt;span class="c1"&gt;// tan cerca.&lt;/span&gt;
          &lt;span class="n"&gt;valorMinimo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;valorAD&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="n"&gt;valorMinimo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mh"&gt;1023&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Tolerancia&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mh"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// Prendemos el led para mostar q se recalibro&lt;/span&gt;
        &lt;span class="n"&gt;digitalWrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PinLedIndicador&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
        &lt;span class="n"&gt;digitalWrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PinLedIndicador&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;HIGH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
        &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                  
        &lt;span class="n"&gt;digitalWrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PinLedIndicador&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
        &lt;span class="n"&gt;digitalWrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PinLedIndicador&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;HIGH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
        &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                  
        &lt;span class="n"&gt;digitalWrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PinLedIndicador&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
        &lt;span class="n"&gt;digitalWrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PinLedIndicador&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;HIGH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
        &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;                  
        &lt;span class="n"&gt;digitalWrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PinLedIndicador&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;/// RUTINA RECALIBRACION ///&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="n"&gt;valorAD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;analogRead&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PinAnalogico&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;valorAD&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;valorMinimo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;Tolerancia&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="n"&gt;digitalWrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PinLedIndicador&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;valorAD&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;valorMinimo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;Tolerancia&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; 
          &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;valorAD&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
          &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TiempoEntreMuestras&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="n"&gt;valorAD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;analogRead&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PinAnalogico&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// Esto indica el fin del sample&lt;/span&gt;
        &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;   &lt;span class="c1"&gt;// Esto indica el fin de la transmision&lt;/span&gt;
        &lt;span class="n"&gt;digitalWrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PinLedIndicador&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;HIGH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The data is received on a PC through the serial port, where a python script is constantly waiting for data and putting in a SQLite database whenever it's available.&lt;/p&gt;
&lt;p&gt;&lt;img alt="pc" src="http://mxlian.github.io/images/neuror/5.resized.JPG" style="width: 720px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;p&gt;The script will:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Connect to the database and get a cursor&lt;/li&gt;
&lt;li&gt;Open the serial port&lt;/li&gt;
&lt;li&gt;Go in a loop where:&lt;ul&gt;
&lt;li&gt;It receives each reading until a &lt;code&gt;newline&lt;/code&gt; character signalizes the end of the sampling &lt;/li&gt;
&lt;li&gt;Store the sample on the database&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NOTE: The &lt;code&gt;readline()&lt;/code&gt; function of the Serial library blocks until the newline character appears on the line.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;serial&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sqlite3&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;

&lt;span class="n"&gt;connection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sqlite3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;puerta&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;datos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;detect_types&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sqlite3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PARSE_DECLTYPES&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;sqlite3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PARSE_COLNAMES&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cursor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="cp"&gt;## To create the database the first time uncomment this&lt;/span&gt;
&lt;span class="cp"&gt;#print "Creando base de datos..."&lt;/span&gt;
&lt;span class="cp"&gt;#cursor.execute('DROP TABLE datos')&lt;/span&gt;
&lt;span class="cp"&gt;#cursor.execute('CREATE TABLE datos (id INTEGER PRIMARY KEY, fecha TIMESTAMP, datos VARCHAR(320))')  #320 ==&amp;gt; "9999-"x64&lt;/span&gt;
&lt;span class="cp"&gt;#connection.commit()&lt;/span&gt;

&lt;span class="cp"&gt;## To print all the data use this&lt;/span&gt;
&lt;span class="cp"&gt;#print "Visualizando datos:"&lt;/span&gt;
&lt;span class="cp"&gt;#cursor.execute('SELECT * FROM datos')&lt;/span&gt;
&lt;span class="cp"&gt;#for row in cursor:&lt;/span&gt;
&lt;span class="cp"&gt;#    print row&lt;/span&gt;

&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ttyS0&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9600&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="s"&gt;"Port in use:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;portstr&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;True&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;INSERT&lt;/span&gt; &lt;span class="n"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;datos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fecha&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;datos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readline&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
                  &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="cp"&gt;#cursor.close()&lt;/span&gt;
&lt;span class="cp"&gt;#connection.close()&lt;/span&gt;
&lt;span class="cp"&gt;#s.close()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Samples&lt;/h1&gt;
&lt;p&gt;The samples obtained were very very nice. You can tell just by looking at them, the different patters that appear.
&lt;img alt="samples" src="http://mxlian.github.io/images/neuror/samples.png" style="width: 2095px; height: auto; max-width: 100%;"/&gt;
&lt;img alt="samples" src="http://mxlian.github.io/images/neuror/sample47.png" style="width: 2095px; height: auto; max-width: 100%;"/&gt;
&lt;img alt="samples" src="http://mxlian.github.io/images/neuror/sample49.png" style="width: 2095px; height: auto; max-width: 100%;"/&gt;&lt;/p&gt;
&lt;h1&gt;Analysis&lt;/h1&gt;
&lt;p&gt;Julian started to train some neuronal networks to be able to recognize and group the patterns. He worked with Kohonnen maps.&lt;/p&gt;
&lt;p&gt;Sadly we had to quit the project because we got a scholarship to go to Germany and we end up abandon the project.&lt;/p&gt;
&lt;p&gt;UPDATE: I put some of the stuff on &lt;a href="//github.com/mxlian/neuror"&gt;GitHub&lt;/a&gt; if case you're interested&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">mxlian</dc:creator><pubDate>Tue, 27 Jul 2010 00:00:00 +0200</pubDate><guid>tag:mxlian.github.io,2010-07-27:neuror.html</guid></item></channel></rss>